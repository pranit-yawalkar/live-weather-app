{"version":3,"sources":["Components/Navbar.js","Components/Weather.js","App.js","index.js"],"names":["Navbar","className","Weather","useState","searchValue","setSearchValue","weatherInfo","setWeatherInfo","weatherState","setWeatherState","getWeatherData","a","url","process","fetch","res","json","data","main","temp","humidity","pressure","weatherCondition","weather","city_name","name","speed","wind","sys","country","sunset","console","log","time","Date","timeStr","getHours","getMinutes","useEffect","type","placeholder","autoFocus","id","value","onChange","e","target","onClick","toDateString","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.611c8227.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <>\r\n            <div className=\"navbar\">\r\n                <nav><i className={\"wi wi-day-rain\"}></i>LiveWeather</nav>   \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import React, {useState, useEffect} from 'react';\r\nimport './style.css';\r\n\r\nconst Weather = () => {\r\n    const [searchValue, setSearchValue] = useState(\"Nashik\");\r\n    const [weatherInfo, setWeatherInfo] = useState({});\r\n    const [weatherState, setWeatherState] = useState(\"\");\r\n\r\n    const getWeatherData = async() => {\r\n        try{\r\n            let url = `https://api.openweathermap.org/data/2.5/weather?q=${searchValue}&units=metric&appid=${process.env.REACT_APP_API_KEY}`;\r\n            const res = await fetch(url);\r\n            const data = await res.json();\r\n            const {temp, humidity, pressure} =  data.main;\r\n            const {main:weatherCondition} = data.weather[0];\r\n            const {name:city_name} = data;\r\n            const {speed} = data.wind;\r\n            const {country, sunset} = data.sys;\r\n            const myWeatherInfo = {\r\n                temp, \r\n                humidity,\r\n                pressure,\r\n                weatherCondition,\r\n                city_name,\r\n                speed,\r\n                country,\r\n                sunset, \r\n            };\r\n            setWeatherInfo(myWeatherInfo);\r\n        } catch(error){\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    let time = new Date(weatherInfo.sunset*1000);\r\n    let timeStr = `${time.getHours()} : ${time.getMinutes()}`\r\n\r\n    useEffect(() => {\r\n        getWeatherData();\r\n    });\r\n\r\n    useEffect(() => {\r\n        if(weatherInfo.weatherCondition){\r\n            switch (weatherInfo.weatherCondition){\r\n                case \"Clouds\":\r\n                    setWeatherState(\"wi-day-cloudy\");\r\n                    break;\r\n                case \"Haze\":\r\n                    setWeatherState(\"wi-fog\");\r\n                    break;\r\n                case \"Clear\":\r\n                    setWeatherState(\"wi-day-sunny\");\r\n                    break;\r\n                case \"Mist\":\r\n                    setWeatherState(\"wi-fog\");\r\n                    break;\r\n                default:\r\n                    setWeatherState(\"wi-day-sunny\");\r\n                    break;\r\n            }\r\n        }\r\n    }, [weatherInfo.weatherCondition])\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <div className=\"wrap\">\r\n                    <div className=\"search\">\r\n                        <input type=\"search\" placeholder=\"Search here...\" autoFocus id=\"search\" className=\"searchItem\" value={searchValue} onChange={(e) =>setSearchValue(e.target.value)}/>\r\n                        <button type=\"button\" className=\"searchButton\" onClick={getWeatherData}><i className=\"fas fa-search\"></i></button>\r\n                    </div>\r\n\r\n                    <article className=\"widget\">\r\n                        <div className=\"weatherIcon\">\r\n                            <i className={`wi ${weatherState}`}></i>\r\n                        </div>\r\n                        <div className=\"weatherInfo\">\r\n                            <div className=\"temp\">\r\n                                <span>{weatherInfo.temp}&deg;C</span>\r\n                            </div>\r\n                            <div className=\"description\">\r\n                                <div className=\"weatherCondition\">{weatherInfo.weatherCondition}</div>\r\n                                <div className=\"place\">{weatherInfo.city_name}, {weatherInfo.country}</div>\r\n                            </div>\r\n                            <div className=\"date\">{ new Date().toDateString()}</div>\r\n                        </div>\r\n                        <div className=\"extra-info\">\r\n                            <div className=\"minmax-info\">\r\n                                <div className=\"two-sided-section\">\r\n                                    <p><i className={\"wi wi-sunset\"}></i></p>\r\n                                    <p className=\"second-section\">{timeStr}<br/> Sunset</p>\r\n                                </div>\r\n                                <div className=\"two-sided-section\">\r\n                                    <p><i className={\"wi wi-humidity\"}></i></p>\r\n                                    <p className=\"second-section\">{weatherInfo.humidity}<br/> Humidity</p>\r\n                                </div>\r\n                                <div className=\"two-sided-section\">\r\n                                    <p><i className={\"wi wi-cloud-down\"}></i></p>\r\n                                    <p className=\"second-section\">{weatherInfo.pressure}<br/> Pressure</p>\r\n                                </div>\r\n                                <div className=\"two-sided-section\">\r\n                                    <p><i className={\"wi wi-strong-wind\"}></i></p>\r\n                                    <p className=\"second-section\">{weatherInfo.speed}<br/> Wind Speed</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                    </article>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Weather;\r\n","import Navbar from './Components/Navbar';\nimport Weather from './Components/Weather';\n\nfunction App() {\n  return (\n    <>\n      <Navbar/>\n      <Weather/>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}